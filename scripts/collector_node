#!/usr/bin/env python3
import rospy
import json
from std_msgs.msg import String
import socketserver
from uru_server import ServerHandler, DBHelper

import sqlalchemy as db


class CollectorNode:
    def __init__(self):
        rospy.init_node("collector")
        rospy.loginfo("Launching collector node...")

        self.port = int(rospy.get_param("~port"))
        self.handler = ServerHandler

        self.result_publish = rospy.Publisher("/liability/infochan/eth/signing/result", Result, queue_size=128)
        rospy.Subscriber("/new_data", String, self.save_data_to_db)

        self.db_helper = DBHelper(rospy.get_param("~db_url")[:-1])

        rospy.loginfo("Collector node is launched!")

    def save_data_to_db(self, data: String):
        rospy.loginfo("Received data {}".format(data.data))

        self.db_helper.insert_row(data.data)

    def spin(self):
        with socketserver.TCPServer(("", self.port), self.handler ) as httpd:
            rospy.loginfo("Serving at port {}".format(self.port))
            httpd.serve_forever()


if __name__ == "__main__":
    CollectorNode().spin()

